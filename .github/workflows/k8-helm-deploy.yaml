name: Deploy to AKS using Helm (Pull from ACR)

on:
  workflow_run:
    workflows: ["Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Log in to Azure using Service Principal
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Update AKS cluster to enable Managed Identity
    - name: Enable Managed Identity for AKS
      run: |
        az aks update \
          --name ${{ secrets.AKS_CLUSTER_NAME }} \
          --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} \
          --enable-managed-identity
    
    # Step 4: Assign AcrPull role to the AKS Managed Identity
    - name: Assign AcrPull role to AKS Managed Identity
      run: |
        az role assignment create \
          --assignee ${{ secrets.AKS_MANAGED_IDENTITY_CLIENT_ID }} \
          --role "AcrPull" \
          --scope /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AKS_RESOURCE_GROUP }}/providers/Microsoft.ContainerRegistry/registries/${{ secrets.ACR_NAME }}

    # Step 5: Set up AKS credentials
    - name: Set up AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    # Step 6: Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name "${{ secrets.AZURE_REGISTRY_URL }}"

    # Step 7: Install Helm
    - name: Set up Helm
      uses: azure/setup-helm@v1

    # Step 8: Uninstall previous backend release (if exists)
    - name: Uninstall backend release (if exists)
      run: |
        helm uninstall backend-release || true  # Ignore error if release does not exist

    # Step 9: Deploy using Helm for backend
    - name: Deploy to AKS using Helm for backend
      run: |
        helm upgrade --install backend-release ./backend-chart \
          --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/backend \
          --set image.tag=latest \
          --debug

    # Step 10: Uninstall previous frontend release (if exists)
    - name: Uninstall frontend release (if exists)
      run: |
        helm uninstall frontend-release || true  # Ignore error if release does not exist

    # Step 11: Deploy using Helm for frontend
    - name: Deploy to AKS using Helm for frontend
      run: |
        helm upgrade --install frontend-release ./frontend-chart \
          --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/frontend \
          --set image.tag=latest \
          --debug

    # Step 12: Verify the deployment
    - name: Verify Deployment
      run: |
        kubectl get pods
